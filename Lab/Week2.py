# 1.❑ ลิสต์(List)
# 1. จงเขียนโปรแกรมเพื่อกำหนดให้ตัวแปรแบบลิสต์ n = [4,6,5,1,3,2,4] แล้วใช้เมธอดต่าง ๆ
# เพื่อให้ได้ผลลัพธ์ ดังแสดงในตัวอย่างการรันโปรแกรม
# 1) แสดงข้อมูลในลิสต์ n
# 2) เพิ่มข้อมูล 7 ต่อท้ายลิสต์ n
# 3) เพิ่มข้อมูล 8 ไปในอินเด็กซ์4 ของลิสต์ n
# 4) ดึงข้อมูลในตำแหน่งสุดท้ายของลิสต์ n ออก
# 5) ลบข้อ 8 ออกจากลิสต์ n
# 6) สำเนาลิสต์ n เป็นไว้ที่ลิสต์ x
# 7) สลับตำแหน่งของข้อมูลทั้งหมดในลิสต์ x
# 8) เรียงลำดับข้อมูลของลิสต์ x จากน้อยไปมาก
# 9) เรียงลำดับข้อมูลของลิสต์ x จากมากไปน้อย
# 10) นับจำนวนข้อมูล 4 ในลิสต์ x
# ตัวอย่างการรันโปรแกรม
# Original list n = [4, 6, 5, 1, 3, 2, 4]
# n = [4, 6, 5, 1, 3, 2, 4, 7]
# n = [4, 6, 5, 1, 8, 3, 2, 4, 7]
# n = [4, 6, 5, 1, 8, 3, 2, 4]
# n = [4, 6, 5, 1, 3, 2, 4]
# x = [4, 6, 5, 1, 3, 2, 4]
# x = [4, 2, 3, 1, 5, 6, 4]
# x = [1, 2, 3, 4, 4, 5, 6]
# x = [6, 5, 4, 4, 3, 2, 1]
# Count 4 from list x = 2

# n = [4,6,5,1,3,2,4]
# print('Original list n =',n)
# n.append(7)
# print('n =',n)
# n.insert(4,8)
# print('n =',n)
# n.pop()
# print('n =',n)
# n.remove(8)
# print('n =',n)
# x = n.copy()
# print('x =',x)
# x.reverse()
# print('x =',x)
# x.sort()
# print('x =',x)
# x.sort(reverse=True)
# print('x =',x)
# c = x.count(4)
# print('Count 4 from list x =',c)

#==================================================================

# 2.❑ ทูเพิล (Tuple)
# 2. จงเขียนโปรแกรมเพื่อกำหนดให้ตัวแปรแบบทูเพิล n = ('7', '6',' 7', '8', '9') แล้วใช้เมธอดต่าง ๆ
# เพื่อให้ได้ผลลัพธ์ ดังแสดงในตัวอย่างการรันโปรแกรม
# 1) แสดงข้อมูลในทูเพิล n
# 2) แสดงเฉพาะข้อมูล 9
# 3) แสดงอินเด็กซ์ของข้อมูล 8
# 4) นับจำนวนข้อมูล 7
# 5) แสดงผลข้อมูลในทูเพิล โดยแทรก --- ระหว่างข้อมูล
# ตัวอย่างการรันโปรแกรม
# Tuple n = ('7', '6', '7', '8', '9')
# 9
# 3
# 2
# 7 --- 6 --- 7 --- 8 --- 9

# n = ('7', '6','7', '8', '9')
# print('Tuple n =', n)
# print(n[4])
# print(n.index('8'))
# print(n.count('7'))
# print(' --- ' .join(n))

#==================================================================

# 3.❑ เซ็ต (Set)
# 3. จงเขียนโปรแกรมเพื่อกำหนดให้ตัวแปรแบบเซ็ต n = {'M', 'ok', 30000, 3.75} แล้วใช้เมธอด
# ต่าง ๆ เพื่อให้ได้ผลลัพธ์ ดังแสดงในตัวอย่างการรันโปรแกรม*
# 1) แสดงข้อมูลในเซ็ต n
# 2) เพิ่มข้อมูล F เข้าไปในเซ็ต
# 3) เพิ่มข้อมูล s, u, t เข้าไปในเซ็ต
# 4) ลบข้อมูล 30000 ในเซ็ต
# 5) ลบข้อมูลทั้งหมดในเซ็ต
# (*ข้อมูลจะถูกจัดเก็บแบบไม่มีการเรียงลำดับ จึงอาจแสดงผลไม่ตรงกับตัวอย่างการรันโปรแกรม
# แต่จำนวนชุดข้อมูลในเซ็ตต้องตรงกัน)
# ตัวอย่างการรันโปรแกรม
# Set n = {30000, 'ok', 3.75, 'M'}
# {3.75, 'ok', 'F', 30000, 'M'}
# {3.75, 't', 'ok', 's', 'F', 'u', 30000, 'M'}
# {3.75, 't', 'ok', 's', 'F', 'u', 'M'}
# set()

# n = {'M', 'ok', 30000, 3.75}
# print('Set n =', n)
# n.add('F')
# print(n)
# n.update({'s', 'u', 't'})
# print(n)
# n.remove(30000)
# print(n)
# n.clear()
# print(n)

#==================================================================

# 4.❑ ดิกชันนารี (Dictionary)
# 4. จงเขียนโปรแกรมเพื่อกำหนดให้ตัวแปรแบบดิกชันนารี dic = {'book': 400, 'bag': 600} แล้วใช้
# เมธอดต่าง ๆ เพื่อให้ได้ผลลัพธ์ ดังแสดงในตัวอย่างการรันโปรแกรม
# 1) แสดงข้อมูลในดิกชันนารี dic
# 2) แสดงเฉพาะ key ของดิกชันนารี
# 3) แสดงเฉพาะ value ของดิกชันนารี
# 4) นับจำนวน key ของดิกชันนารี
# 5) แสดง value ของข้อมูล 'book' ในดิกชันนารี
# 6) เพิ่มข้อมูล 'notebook' = 100 เข้าไปในดิกชันนารี
# 7) ลบข้อมูล 'bag': 600 ในดิกชันนารี
# 8) อัปเดทข้อมูล 'colored pencil': 200 ให้ดิกชันนารี
# ตัวอย่างการรันโปรแกรม
# Dictionary dic = {'book': 400, 'bag': 600}
# dict_keys(['book', 'bag'])
# dict_values([400, 600])
# 2
# 400
# {'book': 400, 'bag': 600, 'notebook': 100}
# {'book': 400, 'notebook': 100}
# {'book': 400, 'notebook': 100, 'colored pencil': 200}

dic = {'book': 400, 'bag': 600}
print('Dictionary dic =', dic)
print(dic.keys())
print(dic.values())
print(len(dic))
print(dic['book'])
dic['notebook'] = 100
print(dic)
dic.pop('bag')
print(dic)
dic.update({'colored pencil': 200})
print(dic)